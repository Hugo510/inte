{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from \"./router/AppNavigator\";\nimport { loadFonts } from \"./styles/fonts\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  useEffect(function () {\n    loadFonts().then(function () {\n      return setFontsLoaded(true);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(AppNavigator, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","AppNavigator","loadFonts","View","Text","ActivityIndicator","jsx","_jsx","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","then","catch","err","console","log","style","flex","justifyContent","alignItems","children","size"],"sources":["F:/proyectos/inte/App.js"],"sourcesContent":["// app.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport AppNavigator from './router/AppNavigator';\r\nimport { loadFonts } from './styles/fonts';\r\nimport { View, Text, ActivityIndicator } from 'react-native'; // Importa ActivityIndicator para el indicador de carga\r\n\r\nconst App = () => {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Carga las fuentes y actualiza el estado cuando se complete la carga\r\n    loadFonts().then(() => setFontsLoaded(true)).catch(err => console.log(err));\r\n  }, []);\r\n\r\n  // Si las fuentes aún no se han cargado, muestra un indicador de carga\r\n  if (!fontsLoaded) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Una vez las fuentes están cargadas, muestra la navegación\r\n  return (\r\n    <NavigationContainer>\r\n      <AppNavigator />\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,YAAY;AACnB,SAASC,SAAS;AAAyB,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG3C,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAsCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCX,SAAS,CAAC,YAAM;IAEdG,SAAS,CAAC,CAAC,CAACY,IAAI,CAAC;MAAA,OAAMD,cAAc,CAAC,IAAI,CAAC;IAAA,EAAC,CAACE,KAAK,CAAC,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAAA,EAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAGN,IAAI,CAACJ,WAAW,EAAE;IAChB,OACEL,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvEhB,IAAA,CAACF,iBAAiB;QAACmB,IAAI,EAAC;MAAO,CAAE;IAAC,CAC9B,CAAC;EAEX;EAGA,OACEjB,IAAA,CAACP,mBAAmB;IAAAuB,QAAA,EAClBhB,IAAA,CAACN,YAAY,IAAE;EAAC,CACG,CAAC;AAE1B,CAAC;AAED,eAAeO,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}